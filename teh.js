// –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
const currentUser = JSON.parse(localStorage.getItem('currentUser'));
let bookings = JSON.parse(localStorage.getItem('techInspections')) || [];

// –≠–ª–µ–º–µ–Ω—Ç—ã –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
const userView = document.getElementById('userView');
const adminView = document.getElementById('adminView');
const userCarNumber = document.getElementById('userCarNumber');
const userBookingsContainer = document.getElementById('userBookings');
const scheduleContainer = document.getElementById('scheduleContainer');
const inspectionDate = document.getElementById('inspectionDate');
const inspectionTime = document.getElementById('inspectionTime');
const addScheduleBtn = document.getElementById('addScheduleBtn');
const adminSchedule = document.getElementById('adminSchedule');
const alertDiv = document.getElementById('alert');
const logo = document.getElementById('logo');

// –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ–π –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–π –¥–∞—Ç—ã
const today = new Date();
const nextYear = new Date();
nextYear.setFullYear(today.getFullYear() + 1);

// –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è input[type="date"]
function formatDateForInput(date) {
    return date.toISOString().split('T')[0];
}

inspectionDate.min = formatDateForInput(today);
inspectionDate.max = formatDateForInput(nextYear);

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–æ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function isAdmin() {
    return currentUser && currentUser.role === 'admin';
}

// –ì–µ–Ω–µ—Ä–∞—Ü–∏—è ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function getUserId(user) {
    return `${user.name}_${user.surname}`;
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function initInterface() {
    if (!currentUser) {
        window.location.href = 'index.html';
        return;
    }

    if (isAdmin()) {
        userView.style.display = 'none';
        adminView.style.display = 'block';
        loadAdminSchedule();
    } else {
        userView.style.display = 'block';
        adminView.style.display = 'none';
        loadUserBookings();
        loadAvailableSlots();
    }
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
function loadUserBookings() {
    userBookingsContainer.innerHTML = '';
    
    const userBookings = bookings.filter(booking => 
        booking.userId === getUserId(currentUser)
    );
    
    if (userBookings.length === 0) {
        userBookingsContainer.innerHTML = '<p>–£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö –∑–∞–ø–∏—Å–µ–π –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä</p>';
        return;
    }
    
    userBookings.forEach(booking => {
        const bookingElement = document.createElement('div');
        bookingElement.className = 'booking-item';
        bookingElement.innerHTML = `
            <p><strong>üìÖ –î–∞—Ç–∞:</strong> ${formatDate(booking.date)}</p>
            <p><strong>‚è∞ –í—Ä–µ–º—è:</strong> ${booking.time}</p>
            <p><strong>üöó –ì–æ—Å. –Ω–æ–º–µ—Ä:</strong> ${booking.carNumber || '–Ω–µ —É–∫–∞–∑–∞–Ω'}</p>
            <button onclick="cancelBooking('${booking.id}')">‚ùå –û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å</button>
        `;
        userBookingsContainer.appendChild(bookingElement);
    });
}

// –ó–∞–≥—Ä—É–∑–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å–ª–æ—Ç–æ–≤
function loadAvailableSlots() {
    scheduleContainer.innerHTML = '';
    
    const availableSlots = bookings.filter(slot => !slot.userId);
    
    if (availableSlots.length === 0) {
        scheduleContainer.innerHTML = '<p>–ù–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –¥–∞—Ç –¥–ª—è –∑–∞–ø–∏—Å–∏</p>';
        return;
    }
    
    // –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –¥–∞—Ç–µ
    const slotsByDate = {};
    availableSlots.forEach(slot => {
        if (!slotsByDate[slot.date]) slotsByDate[slot.date] = [];
        slotsByDate[slot.date].push(slot);
    });
    
    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞—Ç –æ—Ç –±–ª–∏–∂–∞–π—à–µ–π –∫ –¥–∞–ª—å–Ω–µ–π
    const sortedDates = Object.keys(slotsByDate).sort();
    
    // –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–ª–æ—Ç–æ–≤
    sortedDates.forEach(date => {
        const dateElement = document.createElement('div');
        dateElement.innerHTML = `<h3>${formatDate(date)}</h3>`;
        
        const timeSlots = document.createElement('div');
        timeSlots.className = 'time-slots';
        
        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
        slotsByDate[date].sort((a, b) => a.time.localeCompare(b.time)).forEach(slot => {
            const slotElement = document.createElement('div');
            slotElement.className = 'time-slot';
            slotElement.innerHTML = `
                <div>üïí ${slot.time}</div>
                <small>–ù–∞–∂–º–∏—Ç–µ –¥–ª—è –∑–∞–ø–∏—Å–∏</small>
            `;
            slotElement.onclick = () => bookSlot(slot.id);
            timeSlots.appendChild(slotElement);
        });
        
        dateElement.appendChild(timeSlots);
        scheduleContainer.appendChild(dateElement);
    });
}

// –ó–∞–ø–∏—Å—å –Ω–∞ —Å–ª–æ—Ç
function bookSlot(slotId) {
    const carNumber = userCarNumber.value.trim();
    const carNumberRegex = /^[0-9]{4}[A-Za-z]{2}-[0-9]$/;
    
    if (!carNumber || !carNumberRegex.test(carNumber)) {
        showAlert('–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –≥–æ—Å. –Ω–æ–º–µ—Ä (—Ñ–æ—Ä–º–∞—Ç: 1234AB-7)', 'error');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–π –∑–∞–ø–∏—Å–∏
    const hasBooking = bookings.some(b => b.userId === getUserId(currentUser));
    if (hasBooking) {
        showAlert('–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –∑–∞–ø–∏—Å—å –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä', 'error');
        return;
    }
    
    const slotIndex = bookings.findIndex(s => s.id === slotId);
    if (slotIndex === -1 || bookings[slotIndex].userId) {
        showAlert('–≠—Ç–æ –≤—Ä–µ–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ', 'error');
        loadAvailableSlots();
        return;
    }
    
    // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
    bookings[slotIndex].userId = getUserId(currentUser);
    bookings[slotIndex].carNumber = carNumber;
    saveBookings();
    
    showAlert('‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–ø–∏—Å–∞–Ω—ã –Ω–∞ —Ç–µ—Ö–æ—Å–º–æ—Ç—Ä!', 'success');
    loadUserBookings();
    loadAvailableSlots();
}

// –û—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏
function cancelBooking(slotId) {
    if (!confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –æ—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å?')) return;
    
    const slotIndex = bookings.findIndex(s => s.id === slotId);
    if (slotIndex !== -1 && bookings[slotIndex].userId === getUserId(currentUser)) {
        bookings[slotIndex].userId = null;
        bookings[slotIndex].carNumber = null;
        saveBookings();
        
        showAlert('–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–º–µ–Ω–µ–Ω–∞', 'success');
        loadUserBookings();
        loadAvailableSlots();
    }
}

// –ê–¥–º–∏–Ω: –∑–∞–≥—Ä—É–∑–∫–∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
function loadAdminSchedule() {
    adminSchedule.innerHTML = '';
    
    const slotsByDate = {};
    bookings.forEach(slot => {
        if (!slotsByDate[slot.date]) slotsByDate[slot.date] = [];
        slotsByDate[slot.date].push(slot);
    });
    
    // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –¥–∞—Ç
    const sortedDates = Object.keys(slotsByDate).sort();
    
    sortedDates.forEach(date => {
        const dateElement = document.createElement('div');
        dateElement.innerHTML = `<h3>${formatDate(date)}</h3>`;
        
        const timeSlots = document.createElement('div');
        timeSlots.className = 'time-slots';
        
        // –°–æ—Ä—Ç–∏—Ä–æ–≤–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
        slotsByDate[date].sort((a, b) => a.time.localeCompare(b.time)).forEach(slot => {
            const slotElement = document.createElement('div');
            slotElement.className = `time-slot ${slot.userId ? 'booked' : ''}`;
            
            if (slot.userId) {
                const user = findUser(slot.userId);
                slotElement.innerHTML = `
                    <div>üïí ${slot.time}</div>
                    <div>üöó ${slot.carNumber || '–Ω–µ—Ç –Ω–æ–º–µ—Ä–∞'}</div>
                    <div>üë§ ${user ? `${user.name} ${user.surname}` : '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π'}</div>
                    <button class="admin-btn" onclick="adminCancelBooking('${slot.id}')">–û—Ç–º–µ–Ω–∏—Ç—å</button>
                `;
            } else {
                slotElement.innerHTML = `
                    <div>üïí ${slot.time}</div>
                    <div>–°–≤–æ–±–æ–¥–Ω–æ</div>
                    <button class="admin-btn" onclick="deleteSlot('${slot.id}')">–£–¥–∞–ª–∏—Ç—å</button>
                `;
            }
            
            timeSlots.appendChild(slotElement);
        });
        
        dateElement.appendChild(timeSlots);
        adminSchedule.appendChild(dateElement);
    });
}

// –ê–¥–º–∏–Ω: –æ—Ç–º–µ–Ω–∞ –∑–∞–ø–∏—Å–∏
function adminCancelBooking(slotId) {
    if (!confirm('–û—Ç–º–µ–Ω–∏—Ç—å –∑–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è?')) return;
    
    const slotIndex = bookings.findIndex(s => s.id === slotId);
    if (slotIndex !== -1) {
        bookings[slotIndex].userId = null;
        bookings[slotIndex].carNumber = null;
        saveBookings();
        showAlert('–ó–∞–ø–∏—Å—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–º–µ–Ω–µ–Ω–∞', 'success');
        loadAdminSchedule();
    }
}

// –ê–¥–º–∏–Ω: —É–¥–∞–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞
function deleteSlot(slotId) {
    if (!confirm('–£–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Å–ª–æ—Ç –∏–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è?')) return;
    
    bookings = bookings.filter(s => s.id !== slotId);
    saveBookings();
    showAlert('–°–ª–æ—Ç —É–¥–∞–ª–µ–Ω –∏–∑ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è', 'success');
    loadAdminSchedule();
}

// –ê–¥–º–∏–Ω: –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª–æ—Ç–∞
addScheduleBtn.addEventListener('click', () => {
    const date = inspectionDate.value;
    const time = inspectionTime.value;
    
    if (!date || !time) {
        showAlert('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è', 'error');
        return;
    }
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ
    const exists = bookings.some(s => s.date === date && s.time === time);
    if (exists) {
        showAlert('–≠—Ç–æ –≤—Ä–µ–º—è —É–∂–µ –µ—Å—Ç—å –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–∏', 'error');
        return;
    }
    
    // –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–≥–æ —Å–ª–æ—Ç–∞
    bookings.push({
        id: generateId(),
        date,
        time,
        userId: null,
        carNumber: null
    });
    
    saveBookings();
    showAlert('–ù–æ–≤—ã–π —Å–ª–æ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ', 'success');
    loadAdminSchedule();
    
    // –°–±—Ä–æ—Å –ø–æ–ª–µ–π
    inspectionDate.value = '';
    inspectionTime.value = '';
});

// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏
function formatDate(dateString) {
    const options = { weekday: 'long', day: 'numeric', month: 'long', year: 'numeric' };
    return new Date(dateString).toLocaleDateString('ru-RU', options);
}

function generateId() {
    return Math.random().toString(36).substr(2, 9);
}

function showAlert(message, type) {
    alertDiv.textContent = message;
    alertDiv.className = `alert ${type}`;
    setTimeout(() => {
        alertDiv.textContent = '';
        alertDiv.className = 'alert';
    }, 5000);
}

function saveBookings() {
    localStorage.setItem('techInspections', JSON.stringify(bookings));
}

function findUser(userId) {
    const users = JSON.parse(localStorage.getItem('users')) || [];
    return users.find(u => getUserId(u) === userId);
}

// –ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –≥–ª–∞–≤–Ω—É—é
logo.addEventListener('click', () => {
    window.location.href = 'index.html';
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
initInterface();